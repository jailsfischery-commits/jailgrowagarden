getgenv().ToggleScript = true

local MAX_MOON_CATS_TO_PLACE = 7
local PET_NAME_TO_FIND = 'Moon Cat'
local UNEQUIP_COOLDOWN_DELAY = 1.5

local Players = game:GetService('Players')
local ReplicatedStorage = game:GetService('ReplicatedStorage')
local LocalPlayer = Players.LocalPlayer

local GameEvents = ReplicatedStorage:WaitForChild('GameEvents')
local PetsService = GameEvents:WaitForChild('PetsService')
local PetCooldownsUpdated = GameEvents:WaitForChild('PetCooldownsUpdated')

local placedPets = {}
local lastCooldownPrintTime = 0

local function unequipPet(uuid)
    pcall(function()
        PetsService:FireServer('UnequipPet', uuid)
    end)
    placedPets[uuid] = nil
end

PetCooldownsUpdated.OnClientEvent:Connect(function(petUUID, cooldownData)
    if placedPets[petUUID] then
        if type(cooldownData) == 'table' then
            for _, entry in pairs(cooldownData) do
                if entry.Passive and type(entry.Time) == 'number' then
                    placedPets[petUUID] = os.time() + entry.Time + UNEQUIP_COOLDOWN_DELAY
                    break
                end
            end
        end
    end
end)

while true do
    task.wait(1)
    
    if not getgenv().ToggleScript then
        placedPets = {}
        task.wait(5)
        continue
    end

    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild('HumanoidRootPart') then
        task.wait(2)
        continue
    end

    local humanoidRootPart = character.HumanoidRootPart
    local currentTime = os.time()
    local unequippedBatchThisCycle = false

    local placedCount = 0
    for _ in pairs(placedPets) do
        placedCount = placedCount + 1
    end

    if placedCount == MAX_MOON_CATS_TO_PLACE then
        local allPetsReady = true
        for uuid, cooldownEndTime in pairs(placedPets) do
            if type(cooldownEndTime) ~= 'number' or currentTime < cooldownEndTime then
                allPetsReady = false
                break
            end
        end

        if allPetsReady then
            for uuid in pairs(placedPets) do
                unequipPet(uuid)
            end
            unequippedBatchThisCycle = true
        end
    end

    if unequippedBatchThisCycle then
        task.wait(UNEQUIP_COOLDOWN_DELAY)
        continue
    end

    if currentTime >= lastCooldownPrintTime + 5 then
        print('--- Moon Cat Durum Güncellemesi ---')
        local activeCooldowns = 0
        
        for uuid, cooldownEndTime in pairs(placedPets) do
            if type(cooldownEndTime) == 'number' then
                local timeLeft = math.max(0, cooldownEndTime - currentTime)
                print('  - Moon Cat ['..string.sub(uuid, 1, 8)..'] | Kalan Süre: '..timeLeft..'s')
                activeCooldowns = activeCooldowns + 1
            elseif cooldownEndTime == 'pending' then
                print('  - Moon Cat ['..string.sub(uuid, 1, 8)..'] | Beklemede...')
                activeCooldowns = activeCooldowns + 1
            end
        end

        if activeCooldowns == 0 then
            print('  Durum: Yerleştirilecek Moon Cat aranıyor.')
        elseif activeCooldowns < MAX_MOON_CATS_TO_PLACE then
            print('  Durum: Moon Cat yerleştiriliyor ('..activeCooldowns..'/'..MAX_MOON_CATS_TO_PLACE..')')
        else
            print('  Durum: Tüm Moon Catler yerleştirildi. Beklemede...')
        end
        
        lastCooldownPrintTime = currentTime
    end

    if placedCount < MAX_MOON_CATS_TO_PLACE then
        local petsFoundInBackpack = {}
        
        for _, item in ipairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == PET_NAME_TO_FIND then
                local petUUID = item:GetAttribute('PET_UUID')
                if petUUID and type(petUUID) == 'string' and not placedPets[petUUID] then
                    table.insert(petsFoundInBackpack, petUUID)
                end
            end
        end

        if #petsFoundInBackpack > 0 then
            local petsToPlaceCount = math.min(MAX_MOON_CATS_TO_PLACE - placedCount, #petsFoundInBackpack)
            
            for i = 1, petsToPlaceCount do
                local uuidToPlace = petsFoundInBackpack[i]
                pcall(function()
                    PetsService:FireServer('EquipPet', uuidToPlace, humanoidRootPart.CFrame)
                end)
                placedPets[uuidToPlace] = 'pending'
            end
            
            task.wait(0.5)
        end
    end
end
